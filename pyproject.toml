[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
target-version = ["py310"]

[tool.isort]
profile = "black"

[tool.mypy]
follow_imports = "silent"

[[tool.mypy.overrides.cx_Freeze]]
ignore_missing_imports = true

[tool.poetry]
authors = ["Philipp Horstenkamp <philipp@horstenkamp.de>"]
description = "A Short programm that checks a file for its filename and routs the file to a printer or the default software to print defined in the OS or any other software."
license = "MIT"
name = "auto-print"
version = "2.0.5"

[tool.poetry.dependencies]
case-insensitive-dictionary = "0.2.1"
ghostscript = "^0.7"
python = ">=3.11,<3.14"
pywin32 = {version = ">=306,<311", markers = "sys_platform == 'win32'"}

[tool.poetry.group.build.dependencies]
cx-freeze = "^8.0.0"

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
pre-commit = "^2.16.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-argparse = "^0.4.0"
sphinx-intl = "^2.1.0"
sphinx-rtd-theme = "^1.3.0"

[tool.poetry.group.lint.dependencies]
mypy = "^0.991"
pip-audit = "^2.4.5"
ruff = "^0.1.6"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"

[tool.poetry.scripts]
auto-print = "auto_print.auto_print_execute:main"
auto-print-config = "auto_print.auto_print_config_generator:main"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
# Same as Black.
line-length = 88
# Target Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
ignore = [
  "E501",  # line too long
  "E203",  # whitespace before ':'
  "E402",  # module level import not at top of file
  "PLR0913",  # too many arguments to function call
  "PLR2004",  # magic value used in comparison
  "PLW0603",  # using the global statement
  "PLR0915"  # too many statements
]
# Enable flake8-bugbear (`B`) rules.
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "I",  # isort
  "N",  # pep8-naming
  "UP",  # pyupgrade
  "PL",  # pylint
  "RUF"  # ruff-specific rules
]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["auto_print"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLR2004"]
