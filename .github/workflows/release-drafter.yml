name: Release Drafter

on:
  push:
    branches:
    - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Draft Release
      id: draft_release
      uses: release-drafter/release-drafter@v6
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipx
        pipx install poetry

    - name: Set poetry version
      run: |
        VERSION="${{ steps.draft_release.outputs.resolved_version }}"
        poetry version "$VERSION"

    - name: Check for changes to pyproject.toml
      id: check_diff
      run: |
        if git diff --quiet pyproject.toml; then
        echo "changed=false" >> "$GITHUB_OUTPUT"
        else
        echo "changed=true" >> "$GITHUB_OUTPUT"
        fi

    - name: Configure Git
      if: steps.check_diff.outputs.changed == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Commit and push version bump
      if: steps.check_diff.outputs.changed == 'true'
      run: |
        VERSION="${{ steps.draft_release.outputs.resolved_version }}"
        git commit -am "chore: bump version to $VERSION"
        git push
